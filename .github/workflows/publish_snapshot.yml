name: Publish Snapshots

on:
  workflow_dispatch: # Allow manually triggering this workflow
  push:
    branches:    
      - 'develop'
env:
  IS_RELEASE: false
  VERSION_FILE_NAME: core_version.txt
  TMP_SUFFIX: _updated
jobs:
  publish-core:
    name: Release build and publish tiqr-core
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Generate versions of core
        uses: HardNorth/github-version-generate@v1.1.1
        with:
          version-source: file
          version-file: data_version.txt
          release-version-cut-prerelease: ${{ false }}
          next-version-increment-patch: ${{ false }}
          next-version-increment-minor: ${{ false }}
          next-version-increment-major: ${{ false }}

      - name: Set DATA_VERSION
        run: |
          echo "DATA_VERSION='${{ env.CURRENT_VERSION }}'" >> $GITHUB_ENV

      - name: Generate versions
        uses: HardNorth/github-version-generate@v1.1.1
        with:
          version-source: file
          version-file: ${{ env.VERSION_FILE_NAME }}
          next-version-increment-prerelease: ${{ true }}
          next-version-increment-patch: ${{ false }}
          next-version-increment-minor: ${{ false }}
          next-version-increment-major: ${{ false }}

      - name: Set CORE_VERSION
        run: |
          echo "CORE_VERSION=${{ env.CURRENT_VERSION }}" >> $GITHUB_ENV

        # Builds the release artifacts of the library
      - name: Release build for core
        run: ./gradlew :core:assembleRelease

        # Generates other artifacts
      - name: Source jar
        run: ./gradlew sourcesJar

        # Runs upload, and then closes & releases the repository
      - name: Publish to Core to Sonatype
        run: ./gradlew publishCorePublicationToSonatypeRepository --max-workers 1
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      - name: Setup git credentials
        run: |
          git config user.name 'GitHub Publish Core Snapshot action'
          git config user.email 'noreply@surf.nl'
          git config user.password ${{ secrets.GITHUB_TOKEN }}

      - name: Update version file
        id: versionFileUpdate
        run: |
          export CURRENT_VERSION_VALUE=`echo '${{ env.CURRENT_VERSION }}'`
          export NEXT_VERSION_VALUE=`echo '${{ env.NEXT_VERSION }}'`
          sed "s/${CURRENT_VERSION_VALUE}/${NEXT_VERSION_VALUE}/g" ${{ env.VERSION_FILE_NAME }} > ${{ env.VERSION_FILE_NAME }}${{ env.TMP_SUFFIX }}
          rm ${{ env.VERSION_FILE_NAME }}
          mv ${{ env.VERSION_FILE_NAME }}${{ env.TMP_SUFFIX }} ${{ env.VERSION_FILE_NAME }}
          git add ${{ env.VERSION_FILE_NAME }}
          git commit -m "Version update"
          git push

  publish-data:
    name: Release build and publish tiqr-data
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Generate versions
        uses: HardNorth/github-version-generate@v1.1.1
        with:
          version-source: file
          version-file: ${{ env.VERSION_FILE_NAME }}
          next-version-increment-prerelease: ${{ true }}
          next-version-increment-patch: ${{ false }}
          next-version-increment-minor: ${{ false }}
          next-version-increment-major: ${{ false }}
      - name: Set DATA_VERSION
        run: |
          echo "DATA_VERSION=${{ env.CURRENT_VERSION }}" >> $GITHUB_ENV
        # Builds the release artifacts of the library
      - name: Release build for data
        run: ./gradlew :data:assembleRelease

        # Generates other artifacts
      - name: Source jar
        run: ./gradlew sourcesJar

        # Runs upload, and then closes & releases the repository
      - name: Publish to Data to Sonatype
        run: ./gradlew publishDataPublicationToSonatypeRepository --max-workers 1
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      - name: Setup git credentials
        run: |
          git config user.name 'GitHub Publish Data Snapshot action'
          git config user.email 'noreply@surf.nl'
          git config user.password ${{ secrets.GITHUB_TOKEN }}

      - name: Update version file
        id: versionFileUpdate
        run: |
          export CURRENT_VERSION_VALUE=`echo '${{ env.CURRENT_VERSION }}'`
          export NEXT_VERSION_VALUE=`echo '${{ env.NEXT_VERSION }}'`
          sed "s/${CURRENT_VERSION_VALUE}/${NEXT_VERSION_VALUE}/g" ${{ env.VERSION_FILE_NAME }} > ${{ env.VERSION_FILE_NAME }}${{ env.TMP_SUFFIX }}
          rm ${{ env.VERSION_FILE_NAME }}
          mv ${{ env.VERSION_FILE_NAME }}${{ env.TMP_SUFFIX }} ${{ env.VERSION_FILE_NAME }}
          git add ${{ env.VERSION_FILE_NAME }}
          git commit -m "Version update"
          git push

